<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miao.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.miao.domain.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="inputtime" property="inputtime" jdbcType="TIMESTAMP"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="BIT"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <association property="department" javaType="com.miao.domain.Department" columnPrefix="dep_">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.miao.domain.Employee" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
    insert into employee (id, username, inputtime,
      tel, email, state, admin,
      dep_id, password)
    values (#{id}, #{username}, #{inputtime},
      #{tel}, #{email}, #{state}, #{admin},
      #{department.id}, #{password})
  </insert>
    <insert id="insertEmployeeAndRoleRel">
        insert into employee_role_rel(eid,rid)
        values (#{id},#{rid})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.miao.domain.Employee">
        update employee
        set username = #{username},
          inputtime = #{inputtime},
          tel = #{tel},
          email = #{email},
          admin = #{admin},
          dep_id = #{department.id},
          password = #{password}
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select id, username, inputtime, tel, email, state, admin, dep_id, password
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>

    <!--动态拼接keyword-->
    <sql id="keywordSql">

        <where>
            <if test="keyword !=null and keyword!=''">
                and e.username like concat('%',#{keyword},'%')
                or e.tel like concat('%',#{keyword},'%')
                or e.email like concat('%',#{keyword},'%')
            </if>
        </where>
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT e.`id` ,username,inputtime,tel,email,state,admin,d.`id` AS dep_id,d.`name` AS dep_name
        FROM employee e
        LEFT JOIN department d
        ON d.`id`=e.`dep_id`
        <include refid="keywordSql"/>
        order by e.id
    </select>

    <update id="updateState" parameterType="long">
        update `employee` set  state=0
        where id = #{id}
    </update>

    <select id="getRoleByEid" resultType="java.lang.Long" parameterType="long">
        select rid from employee_role_rel
        where eid=#{eid}
    </select>
    <select id="getEmployeeByUsername" resultType="com.miao.domain.Employee">
        select * from `employee` where username = #{username}
    </select>
    <select id="getRolesById" resultType="java.lang.String">
        SELECT r.`rnum`
        FROM employee e , employee_role_rel er,role r
        WHERE e.`id`=er.`eid`
        AND er.`rid`=r.`rid`
        AND e.`id`=#{id}
    </select>
    <select id="getPermissionById" resultType="java.lang.String">
        SELECT DISTINCT p.`presource`
        FROM role_permission_rel rp,permission p,role r
        WHERE rp.`pid`=p.`pid`
        AND rp.`rid`=r.`rid`
        AND r.`rid` IN (SELECT rid FROM employee_role_rel er WHERE er.`eid`=#{id})

    </select>
    <delete id="deleteEmployeeAndRoleRel" parameterType="long">
        delete from employee_role_rel
        where eid=#{id}
    </delete>
</mapper>
